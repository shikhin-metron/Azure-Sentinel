{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "workspaceName": {
            "type": "string",
            "metadata": {
                "description": "Name for the Log Analytics workspace"
            }
        },
        "pricingTier": {
            "type": "string",
            "metadata": {
                "description": "Pricing tier: pergb2018 or legacy tiers (Free, Standalone, PerNode, Standard or Premium) which are not available to all customers."
            },
            "allowedValues": [
                "PerGB2018",
                "Free",
                "Standalone",
                "PerNode",
                "Standard",
                "Premium"
            ],
            "defaultValue": "PerGB2018"
        },
        "dataRetention": {
            "type": "int",
            "minValue": 7,
            "maxValue": 730,
            "metadata": {
                "description": "Number of days of retention. Workspaces in the legacy Free pricing tier can only have 7 days."
            },
            "defaultValue": 90
        },
        "location": {
            "type": "string",
            "metadata": {
                "description": "Location for all resources."
            },
            "defaultValue": "[resourceGroup().location]"
        }
    },
    "functions": [],
    "variables": {
    },
    "resources": [
        {
            "name": "[parameters('workspaceName')]",
            "type": "Microsoft.OperationalInsights/workspaces",
            "apiVersion": "2020-08-01",
            "location": "[parameters('location')]",
            "properties": {
            },
            "resources": [
                {
                    "type": "savedSearches",
                    "apiVersion": "2020-08-01",
                    "name": "vimciscoumbrella",
                    "dependsOn": [
                        "[concat('Microsoft.OperationalInsights/workspaces/', parameters('workspaceName'))]"
                    ],
                    "properties": {
                        "etag": "*",
                        "displayName": "Vendor Information Model Dns - Cisco Umbrella",
                        "category": "Security",
                        "FunctionAlias": "vimDnsCiscoUmbrella",
                        "query": "let DNSQuery_CiscoUmbrella=(){\n    Cisco_Umbrella_dns_CL\n    // \n    // *********** Parsing\n    | parse QueryType_s with DnsQueryType:int \" (\"DnsQueryTypeName:string \")\"\n    //\n    | project \n    //\n    // ******************* Mandatory\n      Type='Cisco_Umbrella_dns_CL',\n       EventCount=int(1),\n       EventStartTime=todatetime(Timestamp_t),\n       EventProduct=\"Umbrella\",\n       EventVendor=\"Cisco Systems\",\n       EventSchemaVersion=\"0.1.1\",\n       Dvc=\"Unknown\" ,\n       EventType=\"lookup\",\n       EventResult=iff(ResponseCode_s=~'NOERROR','Success','Failure'),\n       EventResultDetails=ResponseCode_s,  // => ResponseCodeNames\n       //\n       TimeGenerated, // not handled by schema, but we need to preserve it\n       SrcIpAddr=column_ifexists('InternalIp_s', ''),\n       EventSubType='response',\n  // ********** Renamed columns\n       UrlCategory=column_ifexists('Categories_s', ''),\n       DnsQuery=column_ifexists('Domain_s', '') ,  // [DnsQueryName]\n       ThreatCategory=column_ifexists('Blocked_Categories_s', ''),\n       SrcNatIpAddr=column_ifexists('ExternalIp_s', ''),\n       DvcAction=column_ifexists('Action_s', ''),\n       EventEndTime=todatetime(column_ifexists('Timestamp_t', '')),  // [is this the same as TimeGenrated?]\n   //\n   // *************** keep Parsed data\n       DnsQueryType, DnsQueryTypeName, \n   //\n   // **** Not in schema\n       Identities=column_ifexists('Identities_s', ''), \n       IdentityTypes=column_ifexists('Identity_Types_s', ''),\n       PolicyIdentity=column_ifexists('Policy_Identity_s', ''),\n       PolicyIdentityType=column_ifexists('Policy_Identity_Type_s', '')\n  //\n  // **************Aliases\n  | extend \n      DnsResponseCodeName=EventResultDetails, \n      DomainCategory=UrlCategory,\n      Domain=DnsQuery,\n      IpAddr=SrcIpAddr,\n  // Backward Competability\n      Query=DnsQuery\n      , QueryType=DnsQueryType\n      , ResponseCodeName=column_ifexists('DnsResponseCodeName','')\n      , QueryTypeName=DnsQueryTypeName\n      // \n       };\nDNSQuery_CiscoUmbrella\n",
                        "version": 1
                    }
                },
                {
                "type": "savedSearches",
                "apiVersion": "2020-08-01",
                "name": "imDns",
                    "dependsOn": [
                    "[concat('Microsoft.OperationalInsights/workspaces/', parameters('workspaceName'))]"
                    ],
                    "properties": {
                    "etag": "*",
                    "displayName": " ASIM DNS source agnostic parser",
                    "category": "Security",
                    "FunctionAlias": "imDns",
                    "query": "union isfuzzy=true vimDnsEmpty, vimDnsCiscoUmbrella , vimDnsInfobloxNIOS , vimDnsMicrosoftOMS",
                    "version": 1
                    }
                }
            ]
        }
    ],
    "outputs": {
        "workspaceName": {
            "type": "string",
            "value": "[parameters('workspaceName')]"
        },
        "workspaceIdOutput": {
            "type": "string",
            "value": "[reference(resourceId('Microsoft.OperationalInsights/workspaces/', parameters('workspaceName')), '2015-11-01-preview').customerId]"
        },
        "workspaceKeyOutput": {
            "type": "string",
            "value": "[listKeys(resourceId('Microsoft.OperationalInsights/workspaces/', parameters('workspaceName')), '2015-11-01-preview').primarySharedKey]"
        },
        "workspaceResourceIdOutput": {
            "type": "string",
            "value": "[resourceId('Microsoft.OperationalInsights/workspaces/', parameters('workspaceName'))]"
        }
    }
}